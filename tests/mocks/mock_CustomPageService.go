// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	readme "github.com/liveoaklabs/readme-api-go-client/readme"
	mock "github.com/stretchr/testify/mock"
)

// MockCustomPageService is an autogenerated mock type for the CustomPageService type
type MockCustomPageService struct {
	mock.Mock
}

type MockCustomPageService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCustomPageService) EXPECT() *MockCustomPageService_Expecter {
	return &MockCustomPageService_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: params
func (_m *MockCustomPageService) Create(params readme.CustomPageParams) (readme.CustomPage, *readme.APIResponse, error) {
	ret := _m.Called(params)

	var r0 readme.CustomPage
	var r1 *readme.APIResponse
	var r2 error
	if rf, ok := ret.Get(0).(func(readme.CustomPageParams) (readme.CustomPage, *readme.APIResponse, error)); ok {
		return rf(params)
	}
	if rf, ok := ret.Get(0).(func(readme.CustomPageParams) readme.CustomPage); ok {
		r0 = rf(params)
	} else {
		r0 = ret.Get(0).(readme.CustomPage)
	}

	if rf, ok := ret.Get(1).(func(readme.CustomPageParams) *readme.APIResponse); ok {
		r1 = rf(params)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*readme.APIResponse)
		}
	}

	if rf, ok := ret.Get(2).(func(readme.CustomPageParams) error); ok {
		r2 = rf(params)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// MockCustomPageService_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockCustomPageService_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - params readme.CustomPageParams
func (_e *MockCustomPageService_Expecter) Create(params interface{}) *MockCustomPageService_Create_Call {
	return &MockCustomPageService_Create_Call{Call: _e.mock.On("Create", params)}
}

func (_c *MockCustomPageService_Create_Call) Run(run func(params readme.CustomPageParams)) *MockCustomPageService_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(readme.CustomPageParams))
	})
	return _c
}

func (_c *MockCustomPageService_Create_Call) Return(_a0 readme.CustomPage, _a1 *readme.APIResponse, _a2 error) *MockCustomPageService_Create_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *MockCustomPageService_Create_Call) RunAndReturn(run func(readme.CustomPageParams) (readme.CustomPage, *readme.APIResponse, error)) *MockCustomPageService_Create_Call {
	_c.Call.Return(run)
	return _c
}

// Delete provides a mock function with given fields: slug
func (_m *MockCustomPageService) Delete(slug string) (bool, *readme.APIResponse, error) {
	ret := _m.Called(slug)

	var r0 bool
	var r1 *readme.APIResponse
	var r2 error
	if rf, ok := ret.Get(0).(func(string) (bool, *readme.APIResponse, error)); ok {
		return rf(slug)
	}
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(slug)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(string) *readme.APIResponse); ok {
		r1 = rf(slug)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*readme.APIResponse)
		}
	}

	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(slug)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// MockCustomPageService_Delete_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Delete'
type MockCustomPageService_Delete_Call struct {
	*mock.Call
}

// Delete is a helper method to define mock.On call
//   - slug string
func (_e *MockCustomPageService_Expecter) Delete(slug interface{}) *MockCustomPageService_Delete_Call {
	return &MockCustomPageService_Delete_Call{Call: _e.mock.On("Delete", slug)}
}

func (_c *MockCustomPageService_Delete_Call) Run(run func(slug string)) *MockCustomPageService_Delete_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockCustomPageService_Delete_Call) Return(_a0 bool, _a1 *readme.APIResponse, _a2 error) *MockCustomPageService_Delete_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *MockCustomPageService_Delete_Call) RunAndReturn(run func(string) (bool, *readme.APIResponse, error)) *MockCustomPageService_Delete_Call {
	_c.Call.Return(run)
	return _c
}

// Get provides a mock function with given fields: slug
func (_m *MockCustomPageService) Get(slug string) (readme.CustomPage, *readme.APIResponse, error) {
	ret := _m.Called(slug)

	var r0 readme.CustomPage
	var r1 *readme.APIResponse
	var r2 error
	if rf, ok := ret.Get(0).(func(string) (readme.CustomPage, *readme.APIResponse, error)); ok {
		return rf(slug)
	}
	if rf, ok := ret.Get(0).(func(string) readme.CustomPage); ok {
		r0 = rf(slug)
	} else {
		r0 = ret.Get(0).(readme.CustomPage)
	}

	if rf, ok := ret.Get(1).(func(string) *readme.APIResponse); ok {
		r1 = rf(slug)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*readme.APIResponse)
		}
	}

	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(slug)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// MockCustomPageService_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type MockCustomPageService_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - slug string
func (_e *MockCustomPageService_Expecter) Get(slug interface{}) *MockCustomPageService_Get_Call {
	return &MockCustomPageService_Get_Call{Call: _e.mock.On("Get", slug)}
}

func (_c *MockCustomPageService_Get_Call) Run(run func(slug string)) *MockCustomPageService_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockCustomPageService_Get_Call) Return(_a0 readme.CustomPage, _a1 *readme.APIResponse, _a2 error) *MockCustomPageService_Get_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *MockCustomPageService_Get_Call) RunAndReturn(run func(string) (readme.CustomPage, *readme.APIResponse, error)) *MockCustomPageService_Get_Call {
	_c.Call.Return(run)
	return _c
}

// GetAll provides a mock function with given fields: options
func (_m *MockCustomPageService) GetAll(options ...readme.RequestOptions) ([]readme.CustomPage, *readme.APIResponse, error) {
	_va := make([]interface{}, len(options))
	for _i := range options {
		_va[_i] = options[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []readme.CustomPage
	var r1 *readme.APIResponse
	var r2 error
	if rf, ok := ret.Get(0).(func(...readme.RequestOptions) ([]readme.CustomPage, *readme.APIResponse, error)); ok {
		return rf(options...)
	}
	if rf, ok := ret.Get(0).(func(...readme.RequestOptions) []readme.CustomPage); ok {
		r0 = rf(options...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]readme.CustomPage)
		}
	}

	if rf, ok := ret.Get(1).(func(...readme.RequestOptions) *readme.APIResponse); ok {
		r1 = rf(options...)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*readme.APIResponse)
		}
	}

	if rf, ok := ret.Get(2).(func(...readme.RequestOptions) error); ok {
		r2 = rf(options...)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// MockCustomPageService_GetAll_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAll'
type MockCustomPageService_GetAll_Call struct {
	*mock.Call
}

// GetAll is a helper method to define mock.On call
//   - options ...readme.RequestOptions
func (_e *MockCustomPageService_Expecter) GetAll(options ...interface{}) *MockCustomPageService_GetAll_Call {
	return &MockCustomPageService_GetAll_Call{Call: _e.mock.On("GetAll",
		append([]interface{}{}, options...)...)}
}

func (_c *MockCustomPageService_GetAll_Call) Run(run func(options ...readme.RequestOptions)) *MockCustomPageService_GetAll_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]readme.RequestOptions, len(args)-0)
		for i, a := range args[0:] {
			if a != nil {
				variadicArgs[i] = a.(readme.RequestOptions)
			}
		}
		run(variadicArgs...)
	})
	return _c
}

func (_c *MockCustomPageService_GetAll_Call) Return(_a0 []readme.CustomPage, _a1 *readme.APIResponse, _a2 error) *MockCustomPageService_GetAll_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *MockCustomPageService_GetAll_Call) RunAndReturn(run func(...readme.RequestOptions) ([]readme.CustomPage, *readme.APIResponse, error)) *MockCustomPageService_GetAll_Call {
	_c.Call.Return(run)
	return _c
}

// Update provides a mock function with given fields: slug, params
func (_m *MockCustomPageService) Update(slug string, params readme.CustomPageParams) (readme.CustomPage, *readme.APIResponse, error) {
	ret := _m.Called(slug, params)

	var r0 readme.CustomPage
	var r1 *readme.APIResponse
	var r2 error
	if rf, ok := ret.Get(0).(func(string, readme.CustomPageParams) (readme.CustomPage, *readme.APIResponse, error)); ok {
		return rf(slug, params)
	}
	if rf, ok := ret.Get(0).(func(string, readme.CustomPageParams) readme.CustomPage); ok {
		r0 = rf(slug, params)
	} else {
		r0 = ret.Get(0).(readme.CustomPage)
	}

	if rf, ok := ret.Get(1).(func(string, readme.CustomPageParams) *readme.APIResponse); ok {
		r1 = rf(slug, params)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*readme.APIResponse)
		}
	}

	if rf, ok := ret.Get(2).(func(string, readme.CustomPageParams) error); ok {
		r2 = rf(slug, params)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// MockCustomPageService_Update_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Update'
type MockCustomPageService_Update_Call struct {
	*mock.Call
}

// Update is a helper method to define mock.On call
//   - slug string
//   - params readme.CustomPageParams
func (_e *MockCustomPageService_Expecter) Update(slug interface{}, params interface{}) *MockCustomPageService_Update_Call {
	return &MockCustomPageService_Update_Call{Call: _e.mock.On("Update", slug, params)}
}

func (_c *MockCustomPageService_Update_Call) Run(run func(slug string, params readme.CustomPageParams)) *MockCustomPageService_Update_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(readme.CustomPageParams))
	})
	return _c
}

func (_c *MockCustomPageService_Update_Call) Return(_a0 readme.CustomPage, _a1 *readme.APIResponse, _a2 error) *MockCustomPageService_Update_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *MockCustomPageService_Update_Call) RunAndReturn(run func(string, readme.CustomPageParams) (readme.CustomPage, *readme.APIResponse, error)) *MockCustomPageService_Update_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockCustomPageService creates a new instance of MockCustomPageService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCustomPageService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCustomPageService {
	mock := &MockCustomPageService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
